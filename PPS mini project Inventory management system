#include <iostream>

#include <vector>

#include <string>

using namespace std;

struct Item {

int quantity;

string name; };

double price;

class Inventory ManagementSystem {

private:

vector<Item> inventory;

public:

void addItem() {

Item newItem;

cout << "Enter item name: ";

cin >> newItem.name;

cout << "Enter item quantity: ";

cin >> newItem.quantity;

cout << "Enter item price: ";

cin >> newItem.price;

inventory.push_back(newItem);

cout << "Item added successfully!\n";

}
void viewInventory() {

cout << "\nCurrent Inventory:\n";

for (const auto& item: inventory) {

cout << "Name: " << item.name

<<<", Quantity: " << item.quantity

<<", Price: $" << item.price << endl;
}
}

void manageOrder() {

string itemName;

int order Quantity;

cout << "Enter item name to order: ";

cin >> itemName;

cout << "Enter quantity to order: ";

cin >> order Quantity;

for (auto& item: inventory) {

if (item.name itemName) {

if (item.quantity>= order Quantity) {

item.quantity = order Quantity;

cout << "Order placed successfully!\n";

} else {

cout << "Insufficient quantity in stock!\n";

}

return:

}

}

}

cout << "Item not found in inventory!\n";

void run() {

int choice;

do {

cout << "\nInventory Management System\n";

cout << "1. Add Item\n";

cout << "2. View Inventory\n";

cout << "3. Manage Order\n";

cout << "4. Exit\n";

cout << "Choose an option: ";

cin >> choice;
switch (choice) {

case 1:

addItem();

break;

case 2:

viewInventory();

break;

case 3:

manageOrder();

break;

case 4:

cout << "Exiting the system.\n";

break;

default:

cout << "Invalid option! Please try again.\n";

} } while (choice != 4);

} };

int main() {

Inventory ManagementSystem ims;

ims.run();

return 0;

}
